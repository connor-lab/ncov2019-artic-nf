// Global default params, used in configs
params {

  // Workflow flags
  outdir = './results'

  // Boilerplate options
  help = false
  tracedir = "${params.outdir}/pipeline_info"

  // cache option makes it a bit easier to set conda or singularity cacheDir
  cache = ''

  // varCaller
  varCaller = 'iVar'
  viridian = false
  analysis = false

  // krakenDB
  krakdb = '/data/databases/kraken2/minikraken2_v2_8GB_201904_UPDATE'

  // GFF
  GFF=false
  gff=false

  // upload bucket
  uploadBucket=false
  bucketNameFN4 = 'FN4-queue'
 
  // primers
  primers='auto'
  //primers = 'https://raw.githubusercontent.com/iqbal-lab-org/viridian_workflow/master/viridian_workflow/amplicon_scheme_data/covid-artic-v3.vwf.tsv'

  // parallel processing operation limit
  myQueueSize = 100000

  // number of maximum retries for errored processes
  myMaxRetries = 5

  // total number of error allowed per job 
  myMaxErrors = 1000

  // process fork limit
  myMaxForks = false

  // execution UUID
  run_uuid = 'no_uuid'
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

if (params.varCaller == 'medaka'){
    params.medaka=true
}
else if (params.varCaller == 'viridian'){
    params.viridian=true
}

if ( params.medaka || params.nanopolish || params.viridian ){
    includeConfig 'conf/nanopore.config'
}

if ( params.illumina ){
    includeConfig 'conf/illumina.config'
    if (params.varCaller == 'iVar'){
        params.viridian=false
    }
}

executor{
     queueSize = params.myQueueSize
     submitRateLimit = '5sec'
     pollInterval = '15 sec'
}


profiles {
    sp3 {
        process {
            scratch = true
            errorStrategy = 'ignore'
        }
        report {
            enabled = true
        }
        timeline {
            enabled = true
        }
        dag {
            enabled = true
        }
        trace {
            enabled = true
        }
    }
    conda {
        if ( params.medaka || params.nanopolish ) {
            process.conda = "$baseDir/environments/nanopore/environment.yml"
        } else if (params.illumina) {
            process.conda = "$baseDir/environments/illumina/environment.yml"
        }
        if (params.cache){
            conda.cacheDir = params.cache
        }
        includeConfig 'conf/conda.config'
    }
    docker {
        docker.enabled = true
        fixOwnership = true
        runOptions = "-u \$(id -u):\$(id -g)"
    }
    singularity {
        process {
            scratch = true
            errorStrategy = 'ignore'
        }
        report {
            enabled = true
        }
        timeline {
            enabled = true
        }
        dag {
            enabled = true
        }
        trace {
            enabled = true
        }
        //singularity.enabled = true
        singularity.autoMounts = true

        if ( params.medaka || params.nanopolish || params.analysis ||(params.viridian && !params.illumina) ){
            process {
                withName:getObjCsv {
                    time = '30m'
                    singularity.enabled = true
                    container = '/data/images/oci_pipeline_v0.2.9.sif'
                }
                withName:articDownloadScheme {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-nanopore_v1.13.2.sif'
                }
                withName:articGuppyPlex {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-nanopore_v1.13.2.sif'
                }
                withName:articMinIONMedaka {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-nanopore_v1.13.2.sif'
                }
                withName:articRemoveUnmappedReads {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-nanopore_v1.13.2.sif'
                }
                withName:makeQCCSV {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-nanopore_v1.13.2.sif'
                }
                withName:writeQCSummaryCSV {
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-nanopore_v1.13.2.sif'
                }
                withName:getObjFilesONT {
                    time = '30m'
                    singularity.enabled = true
                    container = '/data/images/oci_pipeline_v0.2.9.sif'
                }
                withName:pango {
                    time = '5m'
                    singularity.enabled = true
                    container = '/data/images/pango_v0.2.9.sif'
                }
                withName:nextclade {
                    time = '5m'
                    singularity.enabled = true
                    container = '/data/images/nextclade_v0.2.9.sif'
                }
                withName:download_nextclade_files {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/nextclade_v0.2.9.sif'
                }
                withName:getVariantDefinitions {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/aln2type_v0.2.9.sif'
                }
                withName:aln2type {
                    time = '5m'
                    singularity.enabled = true
                    container = '/data/images/aln2type_v0.2.9.sif'
                }
                withName:articMinIONViridian {
                    time = '45m'
                    singularity.enabled = true
                    container = '/data/images/viridian_workflow_v0.3.7.img'
                }
                withName:viridianONTPrimers {
                    time = '45m'
                    singularity.enabled = true
                    container = '/data/images/viridian_workflow_v0.3.7.img'
                }
                withName:viridianONTAuto {
                    time = '45m'
                    singularity.enabled = true
                    container = '/data/images/viridian_workflow_v0.3.7.img'
                }
                withName:viridianPrimers {
                    time = '45m'
                    singularity.enabled = true
                    container = '/data/images/viridian_workflow_v0.3.7.img'
                }
                withName:viridianAuto {
                    time = '45m'
                    singularity.enabled = true
                    container = '/data/images/viridian_workflow_v0.3.7.img'
                }
                withName:FN4_upload {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/fn4_upload_v0.2.9.sif'
                }
                withName:uploadToBucket {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/fn4_upload_v0.2.9.sif'
                }
                withName:makeReport {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.2.sif'
                }
                withName:getGFF3 {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/bcftools_v0.2.9.sif'
                }
                withName:bcftools_csq {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/bcftools_v0.2.9.sif'
                }
            }
        } else if (params.illumina) {
            process {
                withName:getObjCsv {
                    time = '30m'
                    singularity.enabled = true
                    container = '/data/images/oci_pipeline_v0.2.9.sif'
                }
                withName:articDownloadScheme {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.2.sif'
                }
                withName:indexReference {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.2.sif'
                }
                withName:readTrimming {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.2.sif'
                }
                withName:readMapping {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.2.sif'
                }
                withName:trimPrimerSequences {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.2.sif'
                }
                withName:callVariants {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.2.sif'
                }
                withName:makeConsensus {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.21.sif'
                }
                withName:makeQCCSV {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.2.sif'
                }
                withName:writeQCSummaryCSV {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.2.sif'
                }
                withName:collateSamples {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.2.sif'
                }
                withName:getObjFiles {
                    time = '30m'
                    singularity.enabled = true
                    container = '/data/images/oci_pipeline_v0.2.9.sif'
                }
                withName:pango {
                    time = '5m'
                    singularity.enabled = true
                    container = '/data/images/pango_v0.2.9.sif'
                }
                withName:nextclade {
                    time = '5m'
                    singularity.enabled = true
                    container = '/data/images/nextclade_v0.2.9.sif'
                }
                withName:download_nextclade_files {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/nextclade_v0.2.9.sif'
                }
                withName:getVariantDefinitions {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/aln2type_v0.2.9.sif'
                }
                withName:aln2type {
                    time = '5m'
                    singularity.enabled = true
                    container = '/data/images/aln2type_v0.2.9.sif'
                }
                withName:viridian {
                    time = '45m'
                    singularity.enabled = true
                    container = '/data/images/viridian_workflow_v0.3.7.img'
                }
                withName:viridianPrimers {
                    time = '45m'
                    singularity.enabled = true
                    container = '/data/images/viridian_workflow_v0.3.7.img'
                }
                withName:viridianAuto {
                    time = '45m'
                    singularity.enabled = true
                    container = '/data/images/viridian_workflow_v0.3.7.img'
                }
                withName:FN4_upload {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/fn4_upload_v0.2.9.sif'
                }
                withName:uploadToBucket {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/fn4_upload_v0.2.9.sif'
                }
                withName:makeReport {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/artic-ncov2019-illumina_v1.13.2.sif'
                }
                withName:getGFF3 {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/bcftools_v0.2.9.sif'
                }
                withName:bcftools_csq {
                    time = '1h'
                    singularity.enabled = true
                    container = '/data/images/bcftools_v0.2.9.sif'
                }
            }
        }
        if (params.cache) {
            singularity.cacheDir = params.cache
        }
    }
    oke {
        process {
            executor = 'k8s'
            scratch = true
            // Exponential backoff: 2s, 4s, 8s, 16s, 32s, and 1min thereafter.
            errorStrategy = {
                sleep(Math.max(60000, Math.pow(2, task.attempt) * 2000) as long)
                return 'retry'
            }
            maxRetries = params.myMaxRetries
            maxErrors = params.myMaxErrors
            if (params.myMaxForks) {
                maxForks = params.myMaxForks
            }
        }
        k8s {
            namespace = 'default'
            storageClaimName = 'default-nextflow-fss-storage-work-pvc'
            storageMountPath = '/work'
            launchDir = "/work/runs/${params.run_uuid}"

            serviceAccount = 'default'
            projectDir = '/work/project'
            pod = [
                [label: 'pod-type', value: 'nextflow-worker'],
                [volumeClaim: 'default-nextflow-fss-storage-data-pvc', mountPath: '/data'],
                [imagePullSecret: 'sp3dockersecret'],
                [imagePullPolicy: 'IfNotPresent']
            ]
        }
        report {
            enabled = true
        }

        timeline {
            enabled = true
        }
        dag {
            enabled = true
        }
        trace {
            enabled = true
        }

        if (params.medaka || params.nanopolish || params.analysis || (params.viridian && !params.illumina)){
            process {
                container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/nf-head-pod:0c8df09c8e58'

                withName:getObjCsv {
                    time = '30m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/oci_pipeline:v0.2.9'
                }
                withName:articDownloadScheme {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-nanopore:v1.13.2'
                }
                withName:articGuppyPlex {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-nanopore:v1.13.2'
                }
                withName:articMinIONMedaka {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-nanopore:v1.13.2'
                }
                withName:articRemoveUnmappedReads {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-nanopore:v1.13.2'
                }
                withName:makeQCCSV {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-nanopore:v1.13.2'
                }
                withName:writeQCSummaryCSV {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-nanopore:v1.13.2'
                }
                withName:getObjFilesONT {
                    time = '30m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/oci_pipeline:v0.2.9'
                }
                withName:pango {
                    time = '5m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/pango:v0.2.9'
                }
                withName:nextclade {
                    time = '5m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/nextclade:1.11.0'
                }
                withName:download_nextclade_files {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/nextclade:1.11.0'
                }
                withName:getVariantDefinitions {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/aln2type:v0.2.9'
                }
                withName:aln2type {
                    time = '5m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/aln2type:v0.2.9'
                }
                withName:articMinIONViridian {
                    time = '45m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/viridian_workflow:v0.3.7'
                }
                withName:viridianONTPrimers {
                    time = '45m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/viridian_workflow:v0.3.7'
                }
                withName:viridianONTAuto {
                    time = '45m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/viridian_workflow:v0.3.7'
                }
                withName:viridianPrimers {
                    time = '45m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/viridian_workflow:v0.3.7'
                }
                withName:viridianAuto {
                    time = '45m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/viridian_workflow:v0.3.7'
                }
                withName:FN4_upload {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/fn4_upload:v0.2.9'
                }
                withName:uploadToBucket {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/fn4_upload:v0.2.9'
                }
                withName:makeReport {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:getGFF3 {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/bcftools:v0.2.9'
                }
                withName:bcftools_csq {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/bcftools:v0.2.9'
                }
                withName:getWorkflowCommit {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-nanopore:v1.13.2'
                }
            }
        } else if (params.illumina) {
            process {
                container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/nf-head-pod:0c8df09c8e58'

                withName:getObjCsv {
                    time = '30m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/oci_pipeline:v0.2.9'
                }
                withName:articDownloadScheme {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:indexReference {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:readTrimming {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:readMapping {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:trimPrimerSequences {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:callVariants {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:makeConsensus {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:makeQCCSV {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:writeQCSummaryCSV {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:collateSamples {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:getObjFiles {
                    time = '30m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/oci_pipeline:v0.2.9'
                }
                withName:pango {
                    time = '5m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/pango:v0.2.9'
                }
                withName:nextclade {
                    time = '5m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/nextclade:1.11.0'
                }
                withName:download_nextclade_files {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/nextclade:1.11.0'
                }
                withName:getVariantDefinitions {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/aln2type:v0.2.9'
                }
                withName:aln2type {
                    time = '5m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/aln2type:v0.2.9'
                }
                withName:viridian {
                    time = '45m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/viridian_workflow:v0.3.7'
                }
                withName:viridianPrimers {
                    time = '45m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/viridian_workflow:v0.3.7'
                }
                withName:viridianAuto {
                    time = '45m'
                    container = 'lhr.ocir.io/lrbvkel2wjot/viridian_workflow:v0.3.7'
                }
                withName:FN4_upload {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/fn4_upload:v0.2.9'
                }
                withName:uploadToBucket {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/fn4_upload:v0.2.9'
                }
                withName:makeReport {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-illumina:v1.13.2'
                }
                withName:getGFF3 {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/bcftools:v0.2.9'
                }
                withName:bcftools_csq {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/bcftools:v0.2.9'
                }
                withName:getWorkflowCommit {
                    time = '1h'
                    container = 'lhr.ocir.io/lrbvkel2wjot/oxfordmmm/artic-ncov2019-nanopore:v1.13.2'
                }
            }
        }
    }
    slurm {
        process.executor = 'slurm'
    }
    lsf {
        process.executor = 'lsf'
    }
    gls {
        process.executor = 'google-lifesciences'
        includeConfig 'conf/gls.config'
    }
}

// COG-UK institutional config
includeConfig 'conf/coguk.config'

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

manifest {
  author = 'Matt Bull'
  description = 'Nextflow for running the Artic ncov2019 pipeline'
  mainScript = 'main.nf'
  nextflowVersion = '>=20.01.0'
  version = 'sp3env-v0.2.9'
}
